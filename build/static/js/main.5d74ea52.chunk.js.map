{"version":3,"sources":["constants/index.js","redux/actions/gallery.js","components/Select/Select.js","components/Navigation/Navigation.js","components/Layouts/DefaultLayout/DefaultLayout.js","components/Layouts/ErrorHandlingLayout/ErrorHandlingLayout.js","components/ThumbnailCard/ThumbnailCard.js","components/Preview/Preview.js","components/Carousel/Carousel.js","components/Button/Button.js","components/ModalDialog/ModalDialog.js","components/GalleryPage/GalleryPage.js","components/NotFound/NotFound.js","App.js","redux/reducer/gallery.js","redux/reducer/index.js","redux/store/index.js","serviceWorker.js","index.js"],"names":["TOP","getGallery","filter","headers","Headers","append","process","section","sort","window","requestOptions","method","redirect","dispatch","type","status","fetch","then","response","text","result","payload","JSON","parse","data","catch","error","alert","Select","props","onChange","option","selectedOption","target","value","handleChange","options","map","i","key","name","prototypes","PropTypes","func","isRequired","array","Navigation","useDispatch","useState","setSection","setSort","setWindow","useEffect","sectionOptions","sortOptions","windowOptions","implementFilter","className","selection","DefaultLayout","children","DefaultLayoutRoute","Component","component","rest","document","title","render","ErrorHandlingLayout","ErrorHandlingLayoutRoute","SelectMediaType","image","length","ImageCard","id","url","link","VideoCard","data-testid","src","alt","controls","ThumbnailCard","Preview","images","item","isActive","onClick","handleIsActive","style","background","width","Carousel","setIsActive","margin","description","ups","downs","score","Fragment","e","Button","handleClick","ModalDialog","display","tabIndex","role","close","content","footer","GalleryPage","galleryItems","useSelector","state","galleryReducer","galleryStatus","displayDetails","setDisplayDetails","selectedTitle","setSelectedTitle","currentPage","setCurrentPage","setImages","paginatedList","setPaginatedList","lastPage","setLastPage","paginate","page_size","slice","finalPage","pages","createList","paginateList","update","concat","updatePageContent","loadingState","color","onScroll","scrollHeight","scrollTop","clientHeight","overflowY","height","animated","NotFound","to","App","path","exact","initialState","gallery","action","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Boolean","location","hostname","match","console","log","getState","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5d74ea52.chunk.js","sourcesContent":["export const GET_GALLERY = \"GET_GALLERY\";\nexport const GETTING_GALLERY = \"GETTING_GALLERY\";\nexport const HOT = \"hot\";\nexport const TOP = \"top\";\nexport const USER = \"user\";\nexport const TIME = \"time\";\nexport const RISING = \"rising\";\nexport const VIRAL = \"viral\";\nexport const DAY = \"day\";\nexport const WEEK = \"week\";\nexport const MONTH = \"month\";\nexport const YEAR = \"year\";\nexport const ALL = \"all\";\n","import { GET_GALLERY, HOT, DAY, TOP, GETTING_GALLERY } from \"../../constants\";\n\nexport const getGallery = (filter) => {\n  const apiURL = process.env.REACT_APP_API_ENDPOINT;\n  const auth = process.env.REACT_APP_AUTHORIZATION;\n  let headers = new Headers();\n  headers.append(\"Authorization\", auth);\n  const section = filter && filter.section ? filter.section : HOT;\n  const sort = filter && filter.sort ? filter.sort : TOP;\n  const window = filter && filter.window ? filter.window : DAY;\n\n  const requestOptions = {\n    method: \"GET\",\n    headers: headers,\n    redirect: \"follow\",\n  };\n\n  return (dispatch) => {\n    dispatch({\n      type: GETTING_GALLERY,\n      status: true,\n    });\n    return fetch(\n      `${apiURL}gallery/${section}/${sort}/${window}`,\n      requestOptions\n    )\n      .then((response) => response.text())\n      .then((result) => {\n        const payload = JSON.parse(result);\n\n        dispatch({\n          type: GET_GALLERY,\n          payload: payload.data,\n        });\n        dispatch({\n          type: GETTING_GALLERY,\n          status: false,\n        });\n      })\n      .catch((error) => {\n        alert(`There was an error: ${error}`);\n      });\n  };\n};\n\nexport default {\n  getGallery,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Select.css\";\n\nfunction Select(props) {\n  function handleChange(option) {\n    const selectedOption = option.target.value;\n    props.handleChange(selectedOption);\n  }\n  return (\n    <select onChange={handleChange}>\n      {props.options.map((option, i) => (\n        <option key={i} value={option.value}>\n          {option.name}\n        </option>\n      ))}\n    </select>\n  );\n}\n\nSelect.prototypes = {\n  handleChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n};\n\nexport default Select;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  DAY,\n  HOT,\n  MONTH,\n  TIME,\n  TOP,\n  USER,\n  WEEK,\n  YEAR,\n  ALL,\n  VIRAL,\n} from \"../../constants\";\nimport { getGallery } from \"../../redux/actions/gallery\";\nimport Select from \"../Select/Select\";\nimport \"./Navigation.css\";\n\nfunction Navigation() {\n  const dispatch = useDispatch();\n  const [section, setSection] = useState(HOT);\n  const [sort, setSort] = useState(TOP);\n  const [window, setWindow] = useState(DAY);\n  useEffect(() => {\n    dispatch(getGallery());\n  }, []);\n  const sectionOptions = [\n    {\n      value: HOT,\n      name: HOT,\n    },\n    {\n      value: TOP,\n      name: TOP,\n    },\n    {\n      value: USER,\n      name: USER,\n    },\n  ];\n  const sortOptions = [\n    {\n      value: TOP,\n      name: TOP,\n    },\n    {\n      value: TIME,\n      name: TIME,\n    },\n    {\n      value: VIRAL,\n      name: VIRAL,\n    },\n  ];\n  const windowOptions = [\n    {\n      value: DAY,\n      name: DAY,\n    },\n    {\n      value: WEEK,\n      name: WEEK,\n    },\n    {\n      value: MONTH,\n      name: MONTH,\n    },\n    {\n      value: YEAR,\n      name: YEAR,\n    },\n    {\n      value: ALL,\n      name: ALL,\n    },\n  ];\n\n  function selectSectionFilter(selection) {\n    setSection(selection);\n    implementFilter(selection, sort, window);\n  }\n\n  function selectSortFilter(selection) {\n    setSort(selection);\n    implementFilter(section, selection, window);\n  }\n\n  function selectWindowFilter(selection) {\n    setWindow(selection);\n    implementFilter(section, sort, selection);\n  }\n\n  function implementFilter(section, sort, window) {\n    const filter = {\n      section: section,\n      sort: sort,\n      window: window,\n    };\n\n    dispatch(getGallery(filter));\n  }\n  return (\n    <div className=\"filters\">\n      <div className=\"row\">\n        <div className=\"col-md-2\">\n          <label>Section</label>\n          <Select options={sectionOptions} handleChange={selectSectionFilter} />\n        </div>\n        <div className=\"col-md-2\">\n          <label>Sort</label>\n          <Select options={sortOptions} handleChange={selectSortFilter} />\n        </div>\n        <div className=\"col-md-2\">\n          <label>Window</label>\n          <Select options={windowOptions} handleChange={selectWindowFilter} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React, { useEffect, Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Navigation from \"../../Navigation/Navigation\";\n\nconst DefaultLayout = ({ children }) => {\n  return (\n    <div>\n      <Navigation />\n      <div className=\"main\">{children}</div>\n    </div>\n  );\n};\n\nconst DefaultLayoutRoute = ({ component: Component, ...rest }) => {\n  useEffect(() => {\n    document.title = \"Lazy loaded fancy thumbnails\";\n  }, []);\n  return (\n    <Route\n      {...rest}\n      render={(props) => (\n        <DefaultLayout>\n          <Component {...props} />\n        </DefaultLayout>\n      )}\n    />\n  );\n};\n\nexport default DefaultLayoutRoute;\n","import React, { useEffect, Component } from \"react\";\nimport { Route } from \"react-router-dom\";\n\nconst ErrorHandlingLayout = ({ children }) => {\n  return (\n    <div>\n      <div className=\"main\">{children}</div>\n    </div>\n  );\n};\n\nconst ErrorHandlingLayoutRoute = ({ component: Component, ...rest }) => {\n  useEffect(() => {\n    document.title = \"Error!!!\";\n  }, []);\n  return (\n    <Route\n      {...rest}\n      render={(props) => (\n        <div>\n          <ErrorHandlingLayout>\n            <Component {...props} />\n          </ErrorHandlingLayout>\n        </div>\n      )}\n    />\n  );\n};\n\nexport default ErrorHandlingLayoutRoute;\n","import React from \"react\";\n\nimport \"./ThumbnailCard.css\";\n\nexport function SelectMediaType({ image }) {\n  if (image && image.length > 0) {\n    // iterator should be less than 1 to display the first item in the array\n    for (let i = 0; i < 1; i++) {\n      switch (image[i].type) {\n        case \"image/png\":\n          return <ImageCard id={image[i].id} url={image[i].link} />;\n\n        case \"image/jpeg\":\n          return <ImageCard id={image[i].id} url={image[i].link} />;\n\n        case \"image/gif\":\n          return <ImageCard id={image[i].id} url={image[i].link} />;\n\n        case \"video/mp4\":\n          return <VideoCard url={image[i].link} type={image[i].type} />;\n        default:\n          return <span>Nothing to display amigo :(</span>;\n      }\n    }\n  }\n  return null;\n}\n\nexport function ImageCard({ url, id }) {\n  return (\n    <span data-testid=\"imageCard\">\n      <img src={url} alt={`photo_${id}`} />\n    </span>\n  );\n}\n\nexport function VideoCard({ url, type }) {\n  return (\n    <span data-testid=\"videoCard\">\n      <video controls>\n        <source src={url} type={type} />\n      </video>\n    </span>\n  );\n}\n\nfunction ThumbnailCard(props) {\n  return (\n    <div className=\"thumbnail\">\n      <div>{<SelectMediaType image={props.image} />}</div>\n      <h3>{props.title}</h3>\n    </div>\n  );\n}\n\nexport default ThumbnailCard;\n","import React from \"react\";\n\nfunction Preview(props) {\n  function handleIsActive(i) {\n    props.handleIsActive(i);\n  }\n  return (\n    <div className=\"preview-section\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <ul className=\"preview\">\n            {props.images && props.images.length > 1\n              ? props.images.map((item, i) => (\n                  <li\n                    className={props.isActive === i ? \"active\" : \"\"}\n                    onClick={() => handleIsActive(i)}\n                    key={i}\n                  >\n                    <span style={{ background: `url(${item.link})` }}></span>\n                  </li>\n                ))\n              : null}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Preview;\n","import React, { useEffect, useState } from \"react\";\nimport Preview from \"../Preview/Preview\";\nimport \"./Carousel.css\";\n\nexport function SelectMediaType({ type, url, id }) {\n  switch (type) {\n    case \"image/png\":\n      return <ImageCard id={id} url={url} />;\n    case \"image/jpeg\":\n      return <ImageCard id={id} url={url} />;\n    case \"image/gif\":\n      return <ImageCard id={id} url={url} />;\n    case \"video/mp4\":\n      return <VideoCard type={type} url={url} />;\n    default:\n      return <span>Nothing to display amigo :(</span>;\n  }\n}\n\nexport function ImageCard({ url, id }) {\n  return (\n    <span data-testid=\"imageCardCarousel\">\n      <img src={url} style={{ width: \"100%\" }} alt={id} />\n    </span>\n  );\n}\n\nexport function VideoCard({ url, type }) {\n  return (\n    <span data-testid=\"videoCardCarousel\">\n      <video controls width=\"100%\">\n        <source src={url} type={type} />\n      </video>\n    </span>\n  );\n}\n\nfunction Carousel(props) {\n  useEffect(() => {}, []);\n  const [isActive, setIsActive] = useState(0);\n\n  function handleIsActive(e) {\n    setIsActive(e);\n  }\n\n  useEffect(() => {}, [isActive]);\n  return (\n    <div>\n      {props.images ? (\n        props.images.map((item, i) => (\n          <div key={i}>\n            <div className=\"row\">\n              <div className=\"col-md-8\">\n                <div className={isActive === i ? \"\" : \"hidden\"}>\n                  <SelectMediaType\n                    url={item.link}\n                    type={item.type}\n                    id={item.id}\n                  />\n                </div>\n              </div>\n              <div className=\"col-md-4\">\n                <div\n                  className={isActive === i ? \"\" : \"hidden\"}\n                  style={{\n                    margin: \"0 auto\",\n                  }}\n                >\n                  {item.description ? (\n                    <div>\n                      <p>{item.description}</p>\n                    </div>\n                  ) : null}\n                  <ul className=\"stats\">\n                    <li>\n                      <h4>Upvote: {props.ups ? `${props.ups}` : \"0\"}</h4>\n                    </li>\n                    <li>\n                      <h4>Downvote: {props.downs ? `${props.downs}` : \"0\"}</h4>\n                    </li>\n                    <li>\n                      <h4>Scores: {props.score ? `${props.score}` : \"0\"}</h4>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))\n      ) : (\n        <React.Fragment>\n          <h1>Nothing to display</h1>\n        </React.Fragment>\n      )}\n      {props.images && props.images.length > 1 ? (\n        <Preview\n          handleIsActive={handleIsActive}\n          images={props.images}\n          isActive={isActive}\n        />\n      ) : null}\n    </div>\n  );\n}\n{\n}\nexport default Carousel;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Button.css\";\n\nexport function Button({ handleClick, text }) {\n  return (\n    <button data-testid=\"buttonId\" onClick={handleClick}>\n      {text}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","import React from \"react\";\nimport Button from \"../Button/Button\";\nimport \"./ModalDialog.css\";\n\nfunction ModalDialog(props) {\n  function closeModal() {\n    props.close();\n  }\n  return (\n    <div>\n      {props.display === true ? (\n        <span>\n          <div className=\"modal fade show block\" tabIndex=\"-1\" role=\"dialog\">\n            <div\n              className=\"modal-dialog modal-dialog-scrollable modal-xl\"\n              role=\"document\"\n            >\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title\">{props.title}</h5>\n                  <Button text=\"&times;\" handleClick={closeModal} />\n                </div>\n                <div className=\"modal-body\">\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">{props.content}</div>\n                  </div>\n                </div>\n                <div className=\"modal-footer\">{props.footer}</div>\n              </div>\n            </div>\n          </div>\n          <div\n            className=\"modal-backdrop fade show block\"\n            id=\"backdrop\"\n            style={{ display: \"block\" }}\n          ></div>\n        </span>\n      ) : null}\n    </div>\n  );\n}\n\nexport default ModalDialog;\n","import React, { useEffect, useState } from \"react\";\nimport ThumbnailCard from \"../ThumbnailCard/ThumbnailCard\";\nimport Carousel from \"../Carousel/Carousel\";\nimport ModalDialog from \"../ModalDialog/ModalDialog\";\nimport { useSelector } from \"react-redux\";\nimport \"./GalleryPage.css\";\n\nfunction GalleryPage() {\n  const { galleryItems } = useSelector((state) => state.galleryReducer);\n  const { galleryStatus } = useSelector((state) => state.galleryReducer);\n  const [displayDetails, setDisplayDetails] = useState(false);\n  const [selectedTitle, setSelectedTitle] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [images, setImages] = useState(null);\n  const [paginatedList, setPaginatedList] = useState([]);\n  const [lastPage, setLastPage] = useState(null);\n  const pageSize = 10;\n\n  useEffect(() => {\n    if (galleryItems) {\n      paginateList();\n    }\n  }, [galleryItems]);\n\n  useEffect(() => {\n    if (galleryItems) {\n      updatePageContent();\n    }\n  }, [currentPage]);\n\n  function updatePageContent() {\n    const pages = paginate(galleryItems, pageSize);\n    const clone = paginatedList;\n\n    const update = clone.concat(pages);\n    setPaginatedList(update);\n  }\n\n  function paginateList() {\n    let finalPage = galleryItems.length / pageSize;\n    if (finalPage % 2 > 0) {\n      finalPage = finalPage + 1;\n    }\n    setLastPage(finalPage);\n    createList();\n  }\n\n  function displayModal(image) {\n    setImages(image);\n    setSelectedTitle(image.title);\n    setDisplayDetails(true);\n  }\n\n  function createList() {\n    const pages = paginate(galleryItems, pageSize);\n    setPaginatedList(pages);\n  }\n\n  function nextPage() {\n    const nextPage = currentPage + 1;\n    setCurrentPage(nextPage);\n  }\n\n  function paginate(array, page_size) {\n    return array.slice((currentPage - 1) * page_size, currentPage * page_size);\n  }\n\n  function onScroll(e) {\n    const bottom =\n      e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight;\n    if (bottom) {\n      nextPage();\n    }\n  }\n\n  const loadingState = (\n    <React.Fragment>\n      <h1 style={{ color: \"#ffffff\" }}>Loading...</h1>\n    </React.Fragment>\n  );\n\n  return (\n    <div\n      onScroll={currentPage <= lastPage ? onScroll : null}\n      className=\"gallery\"\n      style={{ overflowY: \"scroll\", height: \"100vh\" }}\n    >\n      <ModalDialog\n        display={displayDetails}\n        close={() => setDisplayDetails(false)}\n        content={<Carousel images={images ? images.images : null} />}\n        title={selectedTitle}\n      />\n\n      <div className=\"container-fluid\">\n        {galleryStatus === true ? (\n          loadingState\n        ) : (\n          <div className=\"card-columns\">\n            {paginatedList && paginatedList.length > 0\n              ? paginatedList.map((item, i) => (\n                  <div key={i}>\n                    <div\n                      className=\"card\"\n                      key={i}\n                      onClick={() => displayModal(item)}\n                    >\n                      <ThumbnailCard\n                        title={item.title}\n                        type={item.type}\n                        animated={item.animated}\n                        image={item.images}\n                        link={item.link}\n                      />\n                    </div>\n                  </div>\n                ))\n              : null}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default GalleryPage;\n","import React from \"react\";\nimport \"./NotFound.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction NotFound() {\n  return (\n    <div className=\"not-found\">\n      <h1>404: Page not found</h1>\n      <Link to=\"/\">Go home</Link>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from \"react\";\n\nimport \"./App.css\";\nimport { BrowserRouter, Switch } from \"react-router-dom\";\nimport DefaultLayoutRoute from \"./components/Layouts/DefaultLayout/DefaultLayout\";\nimport ErrorHandlingLayoutRoute from \"./components/Layouts/ErrorHandlingLayout/ErrorHandlingLayout\";\nimport GalleryPage from \"./components/GalleryPage/GalleryPage\";\nimport NotFound from \"./components/NotFound/NotFound\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <DefaultLayoutRoute\n          path=\"/\"\n          exact\n          component={GalleryPage}\n        ></DefaultLayoutRoute>\n        <ErrorHandlingLayoutRoute component={NotFound} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { GET_GALLERY, GETTING_GALLERY } from \"../../constants/index\";\n\nconst initialState = {\n  gallery: [],\n};\n\nfunction galleryReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_GALLERY:\n      return { ...state, galleryItems: action.payload };\n    case GETTING_GALLERY:\n      return { ...state, galleryStatus: action.status };\n    default:\n      return state;\n  }\n}\n\nexport default galleryReducer;\n","import { combineReducers } from \"redux\";\nimport galleryReducer from \"./gallery\";\n\nconst rootReducer = combineReducers({ galleryReducer });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport * as serviceWorker from \"./serviceWorker\";\nconsole.log(\"the store\", store.getState().galleryReducer);\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}