{"ast":null,"code":"var _jsxFileName = \"/Users/tonymensah/Documents/consume-imgur/src/components/GalleryPage/GalleryPage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport ThumbnailCard from \"../ThumbnailCard/ThumbnailCard\";\nimport Carousel from \"../Carousel/Carousel\";\nimport ModalDialog from \"../ModalDialog/ModalDialog\";\nimport { useSelector } from \"react-redux\";\nimport \"./GalleryPage.css\";\n\nfunction GalleryPage() {\n  const {\n    galleryItems\n  } = useSelector(state => state.galleryReducer);\n  const {\n    galleryStatus\n  } = useSelector(state => state.galleryReducer);\n  const [displayDetails, setDisplayDetails] = useState(false);\n  const [selectedTitle, setSelectedTitle] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [images, setImages] = useState(null);\n  const [paginatedList, setPaginatedList] = useState([]);\n  const [lastPage, setLastPage] = useState(null);\n  const pageSize = 10;\n  useEffect(() => {\n    if (galleryItems) {\n      paginateList();\n    }\n  }, [galleryItems, paginateList]);\n  useEffect(() => {\n    if (galleryItems) {\n      updatePageContent();\n    }\n  }, [currentPage]);\n\n  function updatePageContent() {\n    const pages = paginate(galleryItems, pageSize);\n    const clone = paginatedList;\n    const update = clone.concat(pages);\n    setPaginatedList(update);\n  }\n\n  function paginateList() {\n    let finalPage = galleryItems.length / pageSize;\n\n    if (finalPage % 2 > 0) {\n      finalPage = finalPage + 1;\n    }\n\n    setLastPage(finalPage);\n    createList();\n  }\n\n  function displayModal(image) {\n    setImages(image);\n    setSelectedTitle(image.title);\n    setDisplayDetails(true);\n  }\n\n  function createList() {\n    const pages = paginate(galleryItems, pageSize);\n    setPaginatedList(pages);\n  }\n\n  function nextPage() {\n    const nextPage = currentPage + 1;\n    setCurrentPage(nextPage);\n  }\n\n  function paginate(array, page_size) {\n    return array.slice((currentPage - 1) * page_size, currentPage * page_size);\n  }\n\n  function onScroll(e) {\n    const bottom = e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight;\n\n    if (bottom) {\n      nextPage();\n    }\n  }\n\n  const loadingState = /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      color: \"#ffffff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Loading...\"));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onScroll: currentPage <= lastPage ? onScroll : null,\n    className: \"gallery\",\n    style: {\n      overflowY: \"scroll\",\n      height: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalDialog, {\n    display: displayDetails,\n    close: () => setDisplayDetails(false),\n    content: /*#__PURE__*/React.createElement(Carousel, {\n      images: images ? images.images : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 18\n      }\n    }),\n    title: selectedTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, galleryStatus === true ? loadingState : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-columns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, paginatedList && paginatedList.length > 0 ? paginatedList.map((item, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    key: i,\n    onClick: () => displayModal(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ThumbnailCard, {\n    title: item.title,\n    type: item.type,\n    animated: item.animated,\n    image: item.images,\n    link: item.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 23\n    }\n  })))) : null)));\n}\n\nexport default GalleryPage;","map":{"version":3,"sources":["/Users/tonymensah/Documents/consume-imgur/src/components/GalleryPage/GalleryPage.js"],"names":["React","useEffect","useState","ThumbnailCard","Carousel","ModalDialog","useSelector","GalleryPage","galleryItems","state","galleryReducer","galleryStatus","displayDetails","setDisplayDetails","selectedTitle","setSelectedTitle","currentPage","setCurrentPage","images","setImages","paginatedList","setPaginatedList","lastPage","setLastPage","pageSize","paginateList","updatePageContent","pages","paginate","clone","update","concat","finalPage","length","createList","displayModal","image","title","nextPage","array","page_size","slice","onScroll","e","bottom","target","scrollHeight","scrollTop","clientHeight","loadingState","color","overflowY","height","map","item","i","type","animated","link"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ThumbnailCard from \"../ThumbnailCard/ThumbnailCard\";\nimport Carousel from \"../Carousel/Carousel\";\nimport ModalDialog from \"../ModalDialog/ModalDialog\";\nimport { useSelector } from \"react-redux\";\nimport \"./GalleryPage.css\";\n\nfunction GalleryPage() {\n  const { galleryItems } = useSelector((state) => state.galleryReducer);\n  const { galleryStatus } = useSelector((state) => state.galleryReducer);\n  const [displayDetails, setDisplayDetails] = useState(false);\n  const [selectedTitle, setSelectedTitle] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [images, setImages] = useState(null);\n  const [paginatedList, setPaginatedList] = useState([]);\n  const [lastPage, setLastPage] = useState(null);\n  const pageSize = 10;\n\n  useEffect(() => {\n    if (galleryItems) {\n      paginateList();\n    }\n  }, [galleryItems, paginateList]);\n\n  useEffect(() => {\n    if (galleryItems) {\n      updatePageContent();\n    }\n  }, [currentPage]);\n\n  function updatePageContent() {\n    const pages = paginate(galleryItems, pageSize);\n    const clone = paginatedList;\n\n    const update = clone.concat(pages);\n    setPaginatedList(update);\n  }\n\n  function paginateList() {\n    let finalPage = galleryItems.length / pageSize;\n    if (finalPage % 2 > 0) {\n      finalPage = finalPage + 1;\n    }\n    setLastPage(finalPage);\n    createList();\n  }\n\n  function displayModal(image) {\n    setImages(image);\n    setSelectedTitle(image.title);\n    setDisplayDetails(true);\n  }\n\n  function createList() {\n    const pages = paginate(galleryItems, pageSize);\n    setPaginatedList(pages);\n  }\n\n  function nextPage() {\n    const nextPage = currentPage + 1;\n    setCurrentPage(nextPage);\n  }\n\n  function paginate(array, page_size) {\n    return array.slice((currentPage - 1) * page_size, currentPage * page_size);\n  }\n\n  function onScroll(e) {\n    const bottom =\n      e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight;\n    if (bottom) {\n      nextPage();\n    }\n  }\n\n  const loadingState = (\n    <React.Fragment>\n      <h1 style={{ color: \"#ffffff\" }}>Loading...</h1>\n    </React.Fragment>\n  );\n\n  return (\n    <div\n      onScroll={currentPage <= lastPage ? onScroll : null}\n      className=\"gallery\"\n      style={{ overflowY: \"scroll\", height: \"100vh\" }}\n    >\n      <ModalDialog\n        display={displayDetails}\n        close={() => setDisplayDetails(false)}\n        content={<Carousel images={images ? images.images : null} />}\n        title={selectedTitle}\n      />\n\n      <div className=\"container-fluid\">\n        {galleryStatus === true ? (\n          loadingState\n        ) : (\n          <div className=\"card-columns\">\n            {paginatedList && paginatedList.length > 0\n              ? paginatedList.map((item, i) => (\n                  <div key={i}>\n                    <div\n                      className=\"card\"\n                      key={i}\n                      onClick={() => displayModal(item)}\n                    >\n                      <ThumbnailCard\n                        title={item.title}\n                        type={item.type}\n                        animated={item.animated}\n                        image={item.images}\n                        link={item.link}\n                      />\n                    </div>\n                  </div>\n                ))\n              : null}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default GalleryPage;\n"]},"metadata":{},"sourceType":"module"}